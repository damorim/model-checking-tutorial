/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ipasir4j_Ipasir4jNative */

#ifndef _Included_ipasir4j_Ipasir4jNative
#define _Included_ipasir4j_Ipasir4jNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    signature
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ipasir4j_Ipasir4jNative_signature
  (JNIEnv *, jclass);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ipasir4j_Ipasir4jNative_init
  (JNIEnv *, jclass);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    release
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ipasir4j_Ipasir4jNative_release
  (JNIEnv *, jclass, jint);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    add
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_ipasir4j_Ipasir4jNative_add
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    assume
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_ipasir4j_Ipasir4jNative_assume
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    solve
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_ipasir4j_Ipasir4jNative_solve
  (JNIEnv *, jclass, jint);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    val
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_ipasir4j_Ipasir4jNative_val
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    failed
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_ipasir4j_Ipasir4jNative_failed
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ipasir4j_Ipasir4jNative
 * Method:    interrupt
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ipasir4j_Ipasir4jNative_interrupt
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
